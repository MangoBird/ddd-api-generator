#!/usr/bin/env node
'use strict';

const program = require('commander');
const all = 'all';
const repo = 'repo';
const repoimpl = 'repoimpl';
const route = 'route';
const test = 'test';

const generateRoute = require('../src/generateRoute');
const generateRouteTest = require('../src/generateRouteTest');
const generateRepositoryImpl = require('../src/generateRepositoryImpl');
const generateRepository = require('../src/generateRepository');

program
  .version('0.0.1')
  .command('generate <component>')
  .description('generate ddd component')
  .option('-n, --name <domain>', 'name of the domain')
  .action(function(component, options) {
    let domain = options.name;

    console.log(`Generating ${domain}.${component}.ts`);
    switch (component) {
      case repo: {
        let result = generateRepository(domain);
        return result;
      }
      case repoimpl: {
        let result = generateRepositoryImpl(component, domain);
        return result;
      }
      case route: {
        let result = generateRoute(component, domain);
        generateRouteTest(component, domain);
        return result;
      }
      case test: {
        let result = generateRouteTest(component, domain);
        return result;
      }
      case all: {
        generateRepository(domain);
        generateRepositoryImpl(component, domain);
        generateRoute(component, domain);
        generateRouteTest(component, domain);
        return;
      }
    }
  });

program.parse(process.argv);
